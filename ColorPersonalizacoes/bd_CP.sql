-- MySQL Script generated by MySQL Workbench
-- Thu Oct 17 13:57:47 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bd_oozmakappa
-- -----------------------------------------------------
-- Nome Software: Color Personalizações
-- Desenvolvedores: Eduardo Rafael, Felipe Pilz, Gabriel Junkes e Lucas Alves.
-- Data Criação: 27/05/2019
-- Data Modificação: 17/10/2019
-- 
-- Descrição: Esse banco serve para o gerenciamento dos dados do software da empresa Color Personalizações, como produtos, ordens de orçamento, categorias, usuário, clientes e orçamentos.

-- -----------------------------------------------------
-- Schema bd_oozmakappa
--
-- Nome Software: Color Personalizações
-- Desenvolvedores: Eduardo Rafael, Felipe Pilz, Gabriel Junkes e Lucas Alves.
-- Data Criação: 27/05/2019
-- Data Modificação: 17/10/2019
-- 
-- Descrição: Esse banco serve para o gerenciamento dos dados do software da empresa Color Personalizações, como produtos, ordens de orçamento, categorias, usuário, clientes e orçamentos.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bd_oozmakappa` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `bd_oozmakappa` ;

-- -----------------------------------------------------
-- Table `bd_oozmakappa`.`categorias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_oozmakappa`.`categorias` (
  `codigo` INT UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT COMMENT 'Determina o código das categorias.',
  `nome` VARCHAR(45) NOT NULL COMMENT 'Informa o nome da categoria.',
  `descricao` TEXT NULL COMMENT 'Informa a descrição de cada categoria.',
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB
COMMENT = 'Tabela para a definição de categorias dos produtos.';


-- -----------------------------------------------------
-- Table `bd_oozmakappa`.`produtos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_oozmakappa`.`produtos` (
  `codigo` INT UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT COMMENT 'Determina qual o código do produto',
  `nome` VARCHAR(40) NOT NULL COMMENT 'Informa o nome do produto',
  `preco_unitario` DECIMAL(6,2) UNSIGNED NOT NULL COMMENT 'Informa o preço unitário de um produto',
  `descricao` TEXT NULL COMMENT 'Apresenta as descrições do produto',
  `categorias_codigo` INT UNSIGNED ZEROFILL NOT NULL COMMENT 'Informa o código da categoria da tabela Categorias.',
  `imagem` VARCHAR(255) NOT NULL COMMENT 'Informa o caminho em que a imagem esta guardada no sistema.\n',
  PRIMARY KEY (`codigo`),
  INDEX `fk_produtos_categorias1_idx` (`categorias_codigo` ASC) ,
  CONSTRAINT `fk_produtos_categorias1`
    FOREIGN KEY (`categorias_codigo`)
    REFERENCES `bd_oozmakappa`.`categorias` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela para o armazenamento dos dados dos produtos';


-- -----------------------------------------------------
-- Table `bd_oozmakappa`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_oozmakappa`.`usuarios` (
  `codigo` INT UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT COMMENT 'Determina o codigo do usuário',
  `email` VARCHAR(80) NOT NULL UNIQUE COMMENT 'Informa o email para o login do usuário.',
  `senha` CHAR(32) NOT NULL COMMENT 'Informa a senha para o login do usuário',
  `nivel` TINYINT(1) UNSIGNED NOT NULL COMMENT 'Informa o nível que o usuário terá.\nEx.: 1 - Atendente, 2- Estampador, 3-Gerente.',
  `nome_func` VARCHAR(45) NOT NULL COMMENT 'Informa o nome do funcionário relacionado ao seu usuário.',
  PRIMARY KEY (`codigo`))
ENGINE = InnoDB
COMMENT = 'Tabela para a definição dos usuários do site.';


-- -----------------------------------------------------
-- Table `bd_oozmakappa`.`clientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_oozmakappa`.`clientes` (
  `id` INT ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Determina o código do cliente.',
  `nome` VARCHAR(45) NOT NULL COMMENT 'Informa o nome do cliente.',
  `tel1` BIGINT(11) UNSIGNED NOT NULL COMMENT 'Informa um dos telefones do cliente.',
  `tel2` BIGINT(11) UNSIGNED NULL COMMENT 'Informa um dos telefones do cliente.',
  `email` VARCHAR(80) NULL COMMENT 'Informa o email do respectivo cliente.',
  `rua` VARCHAR(25) NOT NULL COMMENT 'Informa a rua da residência do cliente.',
  `bairro` VARCHAR(30) NOT NULL COMMENT 'Informa o bairro da residência do cliente.',
  `cidade` VARCHAR(45) NOT NULL COMMENT 'Informa a cidade da residência do cliente.',
  `numero` INT(5) UNSIGNED NOT NULL COMMENT 'Informa o número da residência do cliente.',
  `cpf` BIGINT(11) UNSIGNED ZEROFILL NULL COMMENT 'Informa o CPF do cliente.\n',
  `cnpj` BIGINT(15) UNSIGNED ZEROFILL NULL COMMENT 'Informa o CNPJ do cliente, caso ele seja empresarial.',
  `estado` CHAR(2) NOT NULL COMMENT 'Informa qual o estado da residência do cliente.\nEx.: SC, SP...',
  `cep` INT(8) UNSIGNED NOT NULL COMMENT 'Informa o CEP da residência do cliente.',
  `inscricao_estadual` BIGINT(15) UNSIGNED NULL COMMENT 'Informa a inscrição estadual da residência do cliente, caso for empresarial.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC) ,
  UNIQUE INDEX `cnpj_UNIQUE` (`cnpj` ASC) )
ENGINE = InnoDB
COMMENT = 'Tabela para o registro das informações do cliente.';


-- -----------------------------------------------------
-- Table `bd_oozmakappa`.`orcamentos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_oozmakappa`.`orcamentos` (
  `codigo` INT ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Determina os códigos dos orçamentos.',
  `parcelas` TINYINT(2) UNSIGNED NOT NULL COMMENT 'Informa quantas parcelas o orçamento vai ser feito.\nEx.: 1 - Uma parcela, 4 - Quatro parcelas...',
  `local_entrega` VARCHAR(45) NOT NULL COMMENT 'Informa o local de entrega do produto final.',
  `desconto` DECIMAL(6,2) UNSIGNED NULL COMMENT 'Informa o desconto aplicado no orçamento.',
  `data_emissao` DATE NOT NULL COMMENT 'Informa a data de emissão do orçamento.',
  `clientes_id` INT ZEROFILL UNSIGNED NOT NULL COMMENT 'Informa o id do cliente da tabela Clientes.',
  `usuarios_codigo` INT UNSIGNED ZEROFILL NOT NULL COMMENT 'Informa o código do usuário da tabela Usuarios.',
  `status` TINYINT(1) NULL COMMENT 'Informa o status da orçamento.\nEx.: 1-Em andamento, 2-Finalizada...\n',
  PRIMARY KEY (`codigo`),
  INDEX `fk_orcamentos_clientes1_idx` (`clientes_id` ASC) ,
  INDEX `fk_orcamentos_usuarios1_idx` (`usuarios_codigo` ASC) ,
  CONSTRAINT `fk_orcamentos_clientes1`
    FOREIGN KEY (`clientes_id`)
    REFERENCES `bd_oozmakappa`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orcamentos_usuarios1`
    FOREIGN KEY (`usuarios_codigo`)
    REFERENCES `bd_oozmakappa`.`usuarios` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela para a realização dos orçamentos no sistema.';


-- -----------------------------------------------------
-- Table `bd_oozmakappa`.`ordens_de_servicos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_oozmakappa`.`ordens_de_servicos` (
  `codigo` INT ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Determina o código de uma ordem de serviço.',
  `data_entrega` DATE NOT NULL COMMENT 'Informa a data de entrega prevista do finalizamento da ordem de serviço.',
  `data_emissao` DATE NOT NULL COMMENT 'Informa a data de emissão da ordem de serviço.',
  `status` TINYINT(1) UNSIGNED NOT NULL COMMENT 'Informa o status da ordem de serviço.\nEx.: 1-Em andamento, 2-Finalizada...',
  `orcamentos_codigo` INT ZEROFILL UNSIGNED NOT NULL COMMENT 'Informa o código do orçamento da tabela Orçamentos.',
  `usuarios_codigo` INT UNSIGNED ZEROFILL NOT NULL COMMENT 'Informa o código do usuário da tabela Usuarios',
  PRIMARY KEY (`codigo`),
  INDEX `fk_ordens_de_servicos_orcamentos_idx` (`orcamentos_codigo` ASC) ,
  INDEX `fk_ordens_de_servicos_usuarios1_idx` (`usuarios_codigo` ASC) ,
  CONSTRAINT `fk_ordens_de_servicos_orcamentos`
    FOREIGN KEY (`orcamentos_codigo`)
    REFERENCES `bd_oozmakappa`.`orcamentos` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ordens_de_servicos_usuarios1`
    FOREIGN KEY (`usuarios_codigo`)
    REFERENCES `bd_oozmakappa`.`usuarios` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela para a realização de uma ordem de serviço.';


-- -----------------------------------------------------
-- Table `bd_oozmakappa`.`orcamentos_tem_produtos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_oozmakappa`.`orcamentos_tem_produtos` (
  `produtos_codigo` INT UNSIGNED ZEROFILL NOT NULL COMMENT 'Recebe o código do produto da tabela Produtos',
  `orcamentos_codigo` INT ZEROFILL UNSIGNED NOT NULL COMMENT 'Recebe o código do orçamento da tabela Orçamentos',
  `preco_atual` DECIMAL(6,2) UNSIGNED NOT NULL COMMENT 'Armazena o preço dos produtos no momento da realização do orçamento.',
  `quantidade` TINYINT(3) UNSIGNED NOT NULL COMMENT 'Informa a quantidade de cada produto no orçamento.',
  `especificacao` TEXT NULL COMMENT 'Informa a especificação dos produtos no orçamento.',
  PRIMARY KEY (`produtos_codigo`, `orcamentos_codigo`),
  INDEX `fk_produtos_has_orcamentos_orcamentos1_idx` (`orcamentos_codigo` ASC) ,
  INDEX `fk_produtos_has_orcamentos_produtos1_idx` (`produtos_codigo` ASC) ,
  CONSTRAINT `fk_produtos_has_orcamentos_produtos1`
    FOREIGN KEY (`produtos_codigo`)
    REFERENCES `bd_oozmakappa`.`produtos` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produtos_has_orcamentos_orcamentos1`
    FOREIGN KEY (`orcamentos_codigo`)
    REFERENCES `bd_oozmakappa`.`orcamentos` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela para armazenar os produtos que vão ter em um orçamento.';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

